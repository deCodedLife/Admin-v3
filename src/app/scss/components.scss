//компонент Button
.componentButton {
    position: relative;
    font-size: 0.925rem;
    font-weight: 600;
    color: var(--kt-primary-inverse);
    padding: calc(0.55rem + 1px) calc(1.25rem + 1px);
    background-color: var(--kt-primary);
    white-space: nowrap;
    border: none;
    border-radius: 0.425rem;
    transition: color 0.3s, background-color 0.3s;
    z-index: 1;

    &:disabled {
        opacity: 0.5;
    }

    &.hidden {
        display: none;
    }

    &:hover {
        background-color: var(--kt-primary-active);
    }

    &_container {
        display: flex;
        justify-content: flex-end;
        padding: 0 0.75rem;
        margin-bottom: 10px;

        &.between {
            justify-content: space-between;
        }

        &.inverse {
            justify-content: flex-start;
        }

        & .componentButton:not(:last-child) {
            margin-right: 1rem;
        }

        &.marginless {
            margin-bottom: 0;
        }

        &.paddingless {
            padding: 0;
        }
    }

    &.dark-light {
        background-color: var(--kt-primary-light);
        color: var(--kt-primary);
        border: 0;

        &:hover {
            background-color: var(--kt-primary);
            color: var(--kt-primary-inverse);
        }
    }

    &.light {
        color: var(--kt-light-inverse);
        background-color: var(--kt-light);

        & svg,
        svg g,
        svg [fill] {
            fill: var(--kt-text-gray-700);
        }

        &:hover {
            background-color: var(--kt-light-active);
        }

    }

    &.danger {
        background-color: var(--kt-danger);
        color: var(--kt-danger-inverse);
        &:hover {
            background-color: var(--kt-danger-active);
        }

        & svg,
        svg g,
        svg [fill] {
            fill: var(--kt-danger-inverse);
        }
    }

    &.warning {
        background-color: var(--kt-warning);

        &:hover {
            background-color: var(--kt-warning-active);
        }
    }

    &.success {
        background-color: var(--kt-success);

        &:hover {
            background-color: var(--kt-success-active);
        }
    }

    &.gray {
        background-color: var(--kt-text-gray-300);
        color: var(--kt-text-gray-700);
    }

    & svg,
    svg g,
    svg [fill] {
        fill: var(--kt-primary-inverse);
    }

    &.icon_based {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 0;
        height: calc(1.5em + 1.1rem + 2px);
        width: calc(1.5em + 1.1rem + 2px);
    }

    &_content {
        display: flex;
        justify-content: center;

        & .svg-icon {
            display: flex;
            align-items: center;
            margin-right: 4px;
        }
    }

    &_modalButton {
        position: absolute;
        height: 30px;
        width: 50px;
        font-weight: 700;
        border: none;
        background-color: transparent;
        color: var(--kt-primary-inverse);

        &.modalMinimize {
            top: 0;
            right: 50px;
            background-color: var(--kt-primary);
            border: 1px solid var(--kt-primary);
            border-bottom-left-radius: calc(0.625rem - 1px);
            transition: 0.3s;

            &:hover {
                color: var(--kt-primary);
                background-color: transparent;
            }

        }

        &.modalClose {
            top: 0;
            right: 0;
            background-color: var(--kt-danger);
            border: 1px solid var(--kt-danger);
            border-top-right-radius: 0.4rem;
            transition: 0.3s;

            &:hover {
                color: var(--kt-danger);
                background-color: transparent;
            }
        }

    }

    &.minimized {
        &::after {
            content: " ";
            position: absolute;
            top: 0;
            right: 0;
            height: 10px;
            width: 10px;
            border-radius: 4rem;
            transform: translate(50%, -50%);
            background-color: var(--kt-warning);
        }
    }
}

//компонент Input 
.componentInput {
    &_passwordCheckboxContainer {
        margin: 5px 0;
    }
}

//компонент Textarea
.componentTextarea {
    resize: none;

    &::-webkit-scrollbar {
        background-color: transparent;
        width: 3px;
        height: 3px;
        border-left: none;
        background-image: none;

        &-thumb {
            background-color: var(--kt-scrollbar-color);
            border-radius: 10px;
        }
    }
}

//компонент Select. постфиксы классов нужно смотреть в документации по react-select или в DOM-дереве
.componentSelect {
    &__control {
        height: 100%;
        background-color: var(--kt-input-solid-bg) !important;
        border-color: var(--kt-input-solid-bg) !important;
        border-radius: 0.475rem !important;
        color: var(--kt-input-solid-color);
        font-size: 1.1rem;
        font-weight: 500;
        box-shadow: none !important;

        &.invalid {
            border-color: var(--kt-danger) !important;
        }
    }

    &__value-container {
        padding: 0.775rem 0 0.775rem 1rem !important;

        & .componentSelect__multi-value {
            background-color: var(--kt-card-bg);
            border-radius: 0.475rem;
        }
    }

    &__input-container {
        color: inherit !important;
        margin: 0 !important;
        padding: 0 !important;
    }

    &__multi-value {
        &__add {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0 4px;
            border-radius: 2px;
            width: 22px;
            flex-shrink: 0;
            font-weight: 700;
            transition: color 0.3s, background-color 0.3s;
            &:hover {
                background-color: var(--kt-primary);
                color: var(--kt-primary-inverse);
            }
        }
    }

    &__multi-value__label,
    &__single-value {
        color: inherit !important;
        white-space: unset !important;
        text-overflow: unset !important;
    }

    &__menu {
        background-color: var(--kt-card-bg) !important;
        color: var(--kt-input-solid-color);
    }

    &__option {

        &:hover,
        &:active,
        &:focus,
        &.componentSelect__option--is-focused,
        &.componentSelect__option--is-selected  {
            color: var(--kt-primary-inverse) !important;
            background-color: var(--kt-primary) !important;
        }
    }

    &__indicator-separator {
        display: none;
    }
}

//компонент Info
.componentInfo {
    text-align: center;
    color: var(--kt-text-dark);
    font-weight: 700;
    font-style: 1.075rem;
}

//компонент Filters
.componentFilters {
    &_dropdown {
        background-color: var(--kt-gray-300);
    }

    &_dropdownContainer {
        flex-grow: 1;
        display: flex;
        justify-content: flex-end;
    }

    &_dropdownMenu {
        & .componentButton {
            width: 100%;
            margin-top: 1.25rem;
        }

        & .componentCheckbox {
            & .form-check-label {
                font-size: 1.05rem;
                font-weight: 600;
            }
        }
    }

    &_dropdownFiltersContainer {
        display: flex;
        flex-wrap: wrap;
        align-items: flex-end;
        max-height: 500px;
        overflow-y: auto;
    }

    &_dropdownFilter {
        padding: 0 0.5rem;
        margin-bottom: 0.5rem;
    }

    &_block {
        flex-grow: 1;
    }

    &_blockForm {
        height: 100%;
        display: flex;
        align-items: center;
    }

    &_blockContainer {
        display: flex;
        width: 100%;
        justify-content: flex-end;
    }

    &_blockButton {
        margin-left: 10px;
    }

    &_blockFilter {
        width: 20%;
        flex-shrink: 0;

        &:not(:last-child) {
            margin-right: 5%;
        }
    }

    &_stringForm {
        display: flex;
        align-items: center;
        flex-wrap: wrap;

        &>*:not(:last-child) {
            margin: 0 1rem 2rem 0;
        }
    }

    &_stringFilterContainer {
        width: calc(16% - 1rem);
        min-width: 200px;
    }

    &_stringFilter {

        &.form-control.componentDate_input,
        &.form-control.form-control-solid {
            border: 1px solid var(--kt-gray-300);
            color: var(--kt-text-muted);
            padding: 0.5rem;
            transition: all 0s;

            &:focus {
                border-color: var(--application-theme-color);
                color: inherit;
                background-color: transparent;
            }

            &.selected:not(:focus) {
                background-color: var(--application-theme-color);
                color: var(--kt-primary-inverse);
                border-color: var(--application-theme-color);
            }
        }



        &.componentSelect {
            &__control {
                border: 1px solid var(--kt-gray-300) !important;
                color: inherit !important;
                min-height: unset;

                &--is-focused {
                    border-color: var(--application-theme-color) !important;
                }

                &.selected:not(.componentSelect__control--is-focused) {
                    background-color: var(--application-theme-color) !important;
                    color: var(--kt-primary-inverse) !important;
                    border-color: var(--application-theme-color) !important;

                    & .componentSelect__indicator,
                    & .componentSelect__value-container {
                        color: inherit;
                    }
                }
            }

            &__placeholder {
                color: var(--kt-text-muted) !important;
            }

            &__value-container,
            &__indicator {
                padding: 0.5rem !important;
            }
        }

        &.componentCheckbox {
            height: 100%;
            margin-right: 0;

            & .form-check-input:checked {
                background-color: var(--application-theme-color);
            }

            & .form-check-label {
                font-size: 1.1rem;
                font-weight: 500;
            }
        }

    }

    &_stringButton.componentButton {
        border: 1px solid var(--kt-gray-300);

        & svg g {
            fill: var(--kt-text-muted);
        }

        &:hover {
            border-color: var(--application-theme-color);
            background-color: var(--application-theme-color);

            & svg g {
                fill: var(--kt-primary-inverse);
            }
        }
    }

    &_hiddenDropdown {
        display: none;
    }
}

//компонент Array
.componentArray {
    display: flex;
    flex-wrap: wrap;

    &_item {
        position: relative;
        background-color: var(--kt-input-solid-bg);
        border: 1px solid var(--kt-input-solid-bg);
        border-radius: 0.475rem;
        color: var(--kt-input-solid-color);
        padding: 0.775rem 1rem;
        font-size: 1.1rem;
        font-weight: 500;
        line-height: 1.5;
        margin: 10px 10px 10px 0;
        cursor: pointer;
        transition: border-color 0.3s;

        &:hover {
            border-color: var(--kt-danger);
        }
    }

    &_button {
        align-self: center;
    }

    &_form {
        display: flex;
        flex-wrap: wrap;
        min-width: 250px;

        &_field {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            padding: 0 0.5rem;
            margin-bottom: 10px;
        }
    }

    &_formButtons {
        width: 100%;
        padding: 0 0.5rem;

        & .componentButton:first-child {
            margin-right: 10px;
        }
    }
}

//компонент "В разработке"
.componentInCreation {
    padding: 0.775rem 1rem;
    background-color: var(--kt-input-solid-bg);
    border-radius: 0.475rem;
    border-color: var(--kt-input-solid-bg);
    color: var(--kt-input-solid-color);
    font-size: 1.1rem;
    font-weight: 500;
    line-height: 1.5;
}

//компонент Dashboard
.componentDashboard {
    display: flex;
    justify-content: flex-end;
    width: 100%;
    margin-bottom: 1rem;
    height: 41px; //фиксированная высота нужна для заполнения страницы графиком

    &.inverse {
        justify-content: unset;
    }

    &>*:not(:last-child) {
        margin-right: 10px;
    }
}

//компонент Date 
.componentDate.react-datepicker {
    --border-color: var(--kt-gray-300);
    --background-color: var(--kt-card-bg);
    display: flex;
    background-color: var(--background-color);
    border-color: var(--border-color);
    border-radius: 0.625rem;
    color: inherit;

    & .react-datepicker {

        &__current-month,
        &__day-name,
        &-time__header {
            color: inherit;
        }

        &__month-container {
            padding-bottom: 27px;
        }

        &__navigation {
            &:hover {
                & *::before {
                    border-color: var(--kt-primary);
                }
            }

            &--years {
                height: 26px;

                &::before {
                    content: " ";
                    position: absolute;
                    left: 50%;
                    top: 50%;
                    width: 2px;
                    height: calc(50% - 4px);
                    background-color: var(--kt-gray-300);
                    transform: translate(-50%, -50%);
                }

                &::after {
                    content: "";
                    position: absolute;
                    left: 50%;
                    top: 50%;
                    height: 6px;
                    width: 6px;
                    border-left: 2px solid var(--kt-gray-300);
                    border-bottom: 2px solid var(--kt-gray-300);
                    transform: translate(-50%, -100%) rotate(135deg);
                }

                &.react-datepicker__navigation--years-previous {
                    &::after {
                        transform: translate(-50%, 0) rotate(315deg);
                    }
                }
            }
        }

        &__header {
            background-color: var(--background-color);
            border-bottom: 1px dashed var(--border-color);
        }

        &__header__dropdown {
            display: flex;
            justify-content: space-evenly;
        }

        &__time-container {
            right: -86px;
            top: -1px;
            border-color: var(--border-color);

            & .react-datepicker__time {
                background-color: var(--background-color);

                & .react-datepicker__time-box ul.react-datepicker__time-list li.react-datepicker__time-list-item--selected {
                    background-color: var(--kt-primary-active);
                    color: var(--kt-primary-inverse);
                }
            }
        }

        &__day {
            color: inherit;

            &--outside-month {
                opacity: 0.3;
            }

            &--selected,
            &--keyboard-selected {
                background-color: var(--kt-primary-active);
                color: var(--kt-primary-inverse);
                outline: none;
            }
        }

        &__today-button {
            background-color: var(--kt-primary);
            color: var(--kt-primary-inverse);
            position: absolute;
            bottom: 0;
            width: 100%;
            transition: background-color 0.3s;

            &:hover {
                background-color: var(--kt-primary-active);
            }
        }

        &__month-read-view,
        &__year-read-view {
            display: flex;
            flex-direction: row-reverse;
            color: inherit;
            background-color: transparent;
            border: 2px solid var(--border-color);
            border-radius: 0.625rem;
            padding: 0 3px;
            transition: border-color 0.3s;

            &:hover {
                border-color: var(--kt-primary);
            }

            &--down-arrow {
                margin-left: 3px;
                position: relative;
                right: unset;
                top: unset;
                align-self: center;
                height: 7px;
                width: 7px;
            }
        }

        &__month-dropdown,
        &__year-dropdown {
            background-color: var(--background-color);
            border-color: var(--border-color);
        }

        &__month-select,
        &__year-select {
            color: inherit;
            background-color: transparent;
            border: 2px solid var(--border-color);
            border-radius: 0.625rem;
            outline: none;
            transition: border-color 0.3s;

            &:hover {
                border-color: var(--kt-primary);
            }
        }
    }
}

.componentDate_popper.react-datepicker-popper {
    z-index: 2000;
}

//компонент Search 
.componentSearch {
    padding-right: 2.5rem;

    &_container {
        position: relative;
        flex-grow: 1;
    }

    &_button {
        position: absolute;
        display: flex;
        justify-content: center;
        align-items: center;
        right: 10px;
        top: 50%;
        width: 25px;
        height: 25px;
        padding: 0;
        border-radius: 45px;
        border: none;
        background-color: transparent;
        color: var(--kt-text-gray-700);
        transform: translateY(-50%);

        & .svg-icon {
            color: inherit;
        }

        & svg g [fill],
        svg g path {
            fill: currentColor;
        }
    }
}

//компонент Image 
.componentImage {
    &_container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    &_uploader {
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        align-items: center;
        width: 250px;
        height: 200px;
        border: 1px dashed var(--kt-input-border-color);
        border-radius: 0.475rem;
        background-color: transparent;
        transition: border-color 0.3s;

        &.active {
            border-color: var(--kt-primary);
        }

        &.withPreview {
            justify-content: center;
        }

        & .carousel {
            height: 100%;
            width: 100%;

            &.fullscreen {
                position: fixed;
                top: 0;
                left: 0;
                background-color: rgba($color: #000000, $alpha: 0.7);
                z-index: 9999;

                & .carousel-indicators {
                    transform: translateY(0);
                }

            }

            & .carousel-indicators {
                transform: translateY(100%);
                padding: 10px 0;
                margin-bottom: 0;

                &>button {
                    height: 10px;
                    width: 10px;
                    border: none;
                    border-radius: 4rem;
                    background-color: var(--kt-primary);
                }
            }

            & .carousel-inner {
                height: 100%;
            }

            & .carousel-item {
                height: 100%;
            }
        }
    }

    &_carouselContainer {
        position: relative;
    }

    &_imageContainer {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;
    }

    &_imageToolbar {
        position: absolute;
        top: 10px;
        right: 10px;
        display: flex;
        align-items: center;

        &>*:not(:last-child) {
            margin-right: 1rem;
        }
    }

    &_image {
        max-height: 100%;
        max-width: 100%;
        object-fit: cover;
        cursor: pointer;
    }

    &_uploadMoreButton {
        position: absolute;
        top: 0;
        right: 0;
        transform: translate(50%, -50%);
        border-radius: 4rem;
        height: 25px;
        width: 25px;
        z-index: 1;
    }

    &_uploaderButton {
        border: 1px solid var(--kt-input-border-color);
        border-radius: 4rem;
        background-color: transparent;
        width: 100px;
        height: 100px;
        transition: all 0.3s;
        color: var(--kt-text-muted);

        & .svg-icon {
            color: inherit;

            & svg {
                transition: fill 0.3s;
                fill: currentColor;
                width: 50px;
                height: 50px;
            }
        }

        &:hover {
            background-color: var(--kt-input-border-color);
            color: var(--kt-card-bg);
        }
    }

    &_uploaderText {
        margin-top: 10px;
        font-size: 12px;
        user-select: none;
        text-align: center;
        color: var(--kt-text-muted);
    }

    &_allowedFormats {
        max-width: 200px;
        font-size: 0.85rem;
        color: var(--kt-text-muted);
        margin-top: 0.5rem;
        text-align: center;
    }

    &_allowedFormat {
        font-weight: 600;
        color: var(--kt-text-dark);
    }

    &_editor {
        width: 100%;
    }

    &_editorToolbar {
        margin-top: 1rem;
        display: flex;
        align-items: center;
    }

    &_editorScale {
        flex-grow: 1;
        margin-right: 1rem;
    }
}

//компонент Checkbox
.componentCheckbox {
    margin-right: 5rem;
}

//компонент TextEditor
.componentTextEditor {
    &_signature {
        height: 300px;
        width: 100%;
        border: 1px dashed var(--kt-gray-300);
        border-radius: 0.625rem;
    }

    &_signatureModal {
        z-index: 9999;
    }

    &_signatureModalBackdrop {
        z-index: 9998;
    }

    &.invalid {
        & .tox-tinymce {
            border-color: var(--kt-danger);
        }
    }
}

.tox {
    & .tox-dialog-wrap .tox-dialog {
        max-width: 80vw;
        overflow: auto;
    }

    & .tox-dialog__body-nav {
        overflow: auto;
    }
}

//компонент Object
.componentObject {
    display: flex;
    flex-wrap: wrap;

    &_item {
        position: relative;
        background-color: var(--kt-input-solid-bg);
        border: 1px solid var(--kt-input-solid-bg);
        border-radius: 0.475rem;
        color: var(--kt-input-solid-color);
        padding: 0.775rem 1rem;
        font-size: 1.1rem;
        font-weight: 500;
        line-height: 1.5;
        margin: 10px 10px 10px 0;
        cursor: pointer;
        transition: border-color 0.3s;

        &:hover {
            border-color: var(--kt-danger);
        }
    }

    &_button {
        align-self: center;
    }

    &_formField {
        margin-bottom: 10px;
    }

    &_formButtons {
        & .componentButton:first-child {
            margin-right: 10px;
        }
    }
}

//компонент File
.componentFile {
    &_container {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        min-height: 100px;
        padding: 1.1rem 0 0 1.1rem;
        border: 1px dashed var(--kt-input-border-color);
        border-radius: 0.475rem;
        background-color: transparent;
        transition: border-color 0.3s;


        &.active {
            border-color: var(--kt-primary);
        }
    }

    &_uploadMoreButtonContainer {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100px;
        width: 150px;
        margin-bottom: 1.1rem;
    }

    &_uploadMoreButton.componentButton {
        border: 1px solid var(--kt-input-border-color);
        border-radius: 0.475rem;
        width: 100%;
    }

    &_uploaderText {
        width: 100%;
        margin: 0;
        font-size: 12px;
        -webkit-user-select: none;
        user-select: none;
        text-align: center;
        color: var(--kt-text-muted);
        margin-bottom: 1.1rem;
    }

    &_uploadLink {
        font-size: 1.1rem;
        cursor: pointer;
        text-decoration: underline;
    }

    &_preview {
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        border: 1px solid var(--kt-input-border-color);
        border-radius: 0.475rem;
        height: 100px;
        width: 150px;
        margin: 0 1.1rem 1.1rem 0;
        padding: 0 0.5rem;
    }

    &_previewIcon {
        margin-bottom: 10px;

        & svg {
            width: 50px;
            height: 50px;
        }
    }

    &_previewLink {
        font-weight: 500;
        white-space: nowrap;
        max-width: 100%;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    &_deleteButton.componentButton {
        position: absolute;
        top: 0;
        right: 0;
        transform: translate(50%, -50%);
        border: 1px solid var(--kt-input-border-color);
        border-radius: 4rem;
        height: 30px;
        width: 30px;
    }
}

//компонент Radio
.componentRadio {
    width: 100%;

    &.disabled {
        opacity: 0.5;
    }

    &_button {
        font-size: 0.925rem;
        font-weight: 600;
        padding: calc(0.55rem + 1px) calc(1.25rem + 1px);
        white-space: nowrap;
        border: 1px solid transparent;
        transition: background-color 0.3s, border-color 0.3s;
        background-color: var(--kt-primary-light);
        color: var(--kt-primary);

        &:first-child {
            border-top-left-radius: 0.425rem;
            border-bottom-left-radius: 0.425rem;
        }

        &:last-child {
            border-top-right-radius: 0.425rem;
            border-bottom-right-radius: 0.425rem;
        }

        &.selected,
        &:hover:not(.disabled) {
            color: var(--kt-primary-inverse);
            background-color: var(--kt-primary);
        }
    }
}

//компонент Dropdown
.componentDropdown {
    &_toggle {
        color: var(--kt-text-muted);
        background-color: transparent;
        border: none;
        border-radius: 4rem;
        outline: none;
        padding: 8px;
        transition: 0.3s;

        & .svg-icon {
            color: inherit;

            svg {
                width: 1.75rem;
                height: 1.75rem;
            }
        }

        &:hover {
            color: var(--kt-primary-active);
            background-color: var(--kt-light);
        }
    }

    & .dropdown-menu {
        background-color: transparent;
        padding: 0;
        box-shadow: none;
    }

    & .dropdown-item {
        border-radius: 0.425rem;
        padding: 0;
    }

    & .componentButton {
        border: 1px solid var(--kt-text-muted);
        width: 100%;
    }
}

//компонент Strings
.componentInfoStrings {
    flex-grow: 1;

    &_list {
        display: flex;
        flex-direction: column;
    }

    &_container {
        display: flex;
        user-select: none;

        &:not(:last-child) {
            margin-bottom: 0.5rem;
        }
    }

    &_counter {
        display: flex;
        align-items: center;
        width: unset;
        margin-left: 0.5rem;
        flex-shrink: 0;
    }

    &.clickable {

        cursor: pointer;
        transition: color 0.3s, background-color 0.3s;

        &:hover {
            background-color: var(--kt-primary);
            color: var(--kt-primary-inverse);
        }
    }

}

//компонент SmartList
.componentSmartList {
    --border-color: var(--kt-card-border-color);
    display: flex;
    flex-direction: column;
    align-items: center;

    &_addButton {
        width: 25%;
    }

    &_propertiesContainer {
        width: 100%;
        margin-bottom: 1rem;
    }

    &_propertiesRow {
        position: relative;
        display: flex;
        flex-wrap: wrap;
        padding: 1rem 0.75rem;
        border: 1px solid var(--border-color);
        border-radius: 0.625rem;

        &:not(:last-child) {
            margin-bottom: 1rem;
        }
    }

    &_propertiesRowButton {
        position: absolute;
        top: 1px;
        right: 1px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: none;
        background-color: transparent;
        width: 20px;
        height: 20px;

        & .svg-icon {
            transition: color 0.3s;
        }

        &:hover {
            & .svg-icon {
                color: var(--kt-danger);
            }
        }
    }

    &_property {
        padding: 0 0.5rem 0.5rem;
    }

    &_propertyLabel {
        max-width: 100%;
        margin-bottom: 0;
        font-size: 0.9rem;
        font-weight: 600;
        line-height: 1.5;
        color: var(--kt-form-label-color);
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;

    }
}

//компонент Annotation 
.componentAnnotation {
    display: flex;
    justify-content: center;
    align-items: center;
    color: var(--kt-text-muted);
    flex-shrink: 0;
    transition: color 0.3s;

    &:hover {
        color: var(--kt-primary-active);
    }

    & .svg-icon {
        display: flex;
        justify-content: center;
        align-items: center;
        color: inherit;

        & svg {
            width: 22px;
            height: 22px;
            fill: currentColor;
        }
    }
}

//компонент Tooltip 
.componentTooltip {
    position: fixed;
    white-space: pre-wrap;
    z-index: 10000;

    & .tooltip-inner {
        max-width: 300px;
        text-align: left;
        background-color: var(--kt-card-bg);
        color: inherit;
    }

    & .tooltip-arrow::before {
        border-top-color: var(--kt-card-bg);
    }

    &.centered .tooltip-inner {
        text-align: center;
    }
}

//компонент Popover 
.componentPopover {
    position: fixed;
}

//компонент Audio
.componentAudio {
    display: none;

    &_container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        width: 350px;
        padding: 0.5rem 0.75rem;
        border: 1px solid var(--kt-card-border-color);
        border-radius: 0.625rem;
    }

    &_mainProperties {
        width: 100%;
        display: flex;
        align-items: center;
        margin-bottom: 0.5rem;
    }

    &_title {
        font-size: 1.05rem;
        font-weight: 600;
        flex-grow: 1;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    &_time {
        font-size: 0.85rem;
        font-weight: 500;
    }

    &_range {
        width: 100%;
        height: 1rem;
    }

    &_toolbar {
        display: flex;
        align-items: center;
        margin-top: 0.5rem;
    }

    &_buttonsContainer {
        display: flex;
        align-items: center;
    }

    &_button {
        margin: 0 0.5rem;
        flex-shrink: 0;

        &.active .svg-icon svg {
            fill: var(--kt-primary);
        }
    }

    &_mainButton.componentButton {
        height: calc(2.25em + 1.1rem + 2px);
        width: calc(2.25em + 1.1rem + 2px);

        & .svg-icon svg {
            height: 1.725rem;
            width: 1.725rem;
        }
    }

}

//компонент Phone
.componentPhone {
    flex-grow: 1;

    &.withButton {
        margin-right: 1rem;
    }

    &_container {
        display: flex;
        align-items: center;
    }

    &_button {
        flex-shrink: 0;
    }
}

//компонент Layout
.componentLayout_editButton {
    margin-bottom: 0.5rem;
}


//компонент Drawer 
.componentDrawer {
    --drawer-variable: 640px;
    position: fixed;
    background-color: var(--kt-app-bg-color);
    transition: transform 0.5s;
    padding: 1rem 0.5rem;
    overflow: auto;

    &_wrapper {
        position: fixed;
        top: 0;
        right: 0;

        background-color: rgba($color: #000000, $alpha: 0.5);

        &.active {
            bottom: 0;
            left: 0;
        }
    }

    &.top {
        width: 100%;
        height: var(--drawer-variable);
        top: 0;
        left: 0;
        transform: translateY(-100%);

        &.active {
            transform: translateY(0);
        }
    }

    &.right {
        width: var(--drawer-variable);
        height: 100vh;
        top: 0;
        right: 0;
        transform: translateX(100%);

        &.active {
            transform: translateX(0);
        }
    }

    &.bottom {
        width: 100%;
        height: var(--drawer-variable);
        bottom: 0;
        left: 0;
        transform: translateY(100%);

        &.active {
            transform: translateY(0);
        }
    }

    &.left {
        width: var(--drawer-variable);
        height: 100vh;
        top: 0;
        left: 0;
        transform: translateX(-100%);

        &.active {
            transform: translateX(0);
        }
    }

    & .btn-close {
        position: absolute;
        right: 10px;
        top: 10px;
        z-index: 2;
    }
}


//контейнер выпадающего списка GoogleAddress
.pac-container {
    z-index: 2000;
}